{"version":3,"sources":["router/routerComp.tsx","pages/home/index.tsx","pages/home/notes/index.tsx","api/request.tsx","pages/home/news/list.tsx","router/routes.tsx","pages/help/index.tsx","api/getData.tsx","pages/home/news/detail.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["RouterComp","props","routes","console","log","redir","length","filter","v","i","redirect","renderRedir","map","react_default","a","createElement","react_router","from","path","to","key","component","Object","assign","children","concat","Content","Sider","withRouter","history","useHistory","layout","className","width","theme","menu","onClick","res","name","find","item","push","defaultSelectedKeys","Item","style","padding","margin","minHeight","background","routerComp","Notes","empty","description","instance","axios","create","baseURL","timeout","interceptors","request","use","config","url","error","Promise","reject","response","data","code","msg","TabPane","exact","Home","_useReducer","useReducer","state","action","type","objectSpread2","list","types","typeId","Error","_useReducer2","slicedToArray","dispatch","getNews","_ref","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","params","page","http","get","sent","stop","_x","apply","this","arguments","useEffect","_callee2","_context2","handleChange","_ref3","_callee3","_context3","_x2","tabs","defaultActiveKey","String","onChange","tab","typeName","itemLayout","dataSource","renderItem","newsId","title","postTime","source","_useState","useState","content","cover","_useState2","detail","setDetail","id","match","getListDetail","then","dangerouslySetInnerHTML","__html","App","react_router_dom","Boolean","window","location","hostname","root","document","getElementById","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a11b9ea4.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom'\n\nfunction RouterComp(props) {\n  let {\n    routes\n  } = props;\n  console.log(props.routes,'props.routes');\n  //这里是将所有是重定向的项找出来\n  let redir = routes && routes.length > 0 && routes.filter((v, i) => {\n    return v.redirect \n  })\n  //将重定向的组件渲染出来\n  let renderRedir =redir&& redir.length > 0 && redir.map((v, i) => {\n    return <Redirect from={v.path} to={v.redirect} key={i} />\n  })\n  return (\n    <Switch>\n      {\n      //这里将所有的Route按照它的path和对应的组件渲染\n        routes && routes.length > 0 && routes.map((v, i) => {\n          if (v.component) {\n            return <Route key={i} path={v.path} component={(props) => {\n            \t//这里我们将children也就是下一级路由传下去方便在下一级路由使用\n              return <v.component routes={v.children} {...props} />\n            }} />\n          }\n          //这里我们将重定向的组件加到里面\n        }).concat(renderRedir)\n      }\n    </Switch>  \n  )\n}\n\nexport default RouterComp;","import React from 'react';\nimport {withRouter, useHistory} from 'react-router-dom';\nimport { Menu , Layout } from 'antd';\nimport RouterComp from \"../../router/routerComp\";\nimport './index.scss';\nconst { Content, Sider } = Layout;\nconst Home = (props) => {\n    const history = useHistory();\n    const MenuList = () => {\n        return [\n            {\n                key: '1',\n                name: '新闻资讯',\n                path: '/home/list'\n            },\n            {\n                key: '2',\n                name: '我的笔记',\n                path: '/home/notes'\n            }\n        ]\n    }\n    const handleClick = (res) => {\n        console.log(res,'result')\n        let path = MenuList().find(item => item.key === res.key)!.path;\n        history.push(path);\n    }\n    return (\n        <Layout className=\"lan-home\">\n            <Sider width={200} className=\"lan-sider\" theme=\"light\">\n                <Menu\n                    onClick={handleClick}\n                    defaultSelectedKeys={['1']}\n                >\n                    {\n                        MenuList().map(item => {\n                            return (\n                                <Menu.Item key={item.key}>\n                                    {item.name}\n                                </Menu.Item>\n                            )\n                        })\n                    }\n                </Menu>\n            </Sider>\n            <Layout style={{ padding: '0 24px 24px' }}>\n                <Content\n                    className=\"lan-content\"\n                    style={{\n                        padding: 24,\n                        margin: 0,\n                        minHeight: 280,\n                        background: '#FFF'\n                    }}\n                >\n                  <RouterComp routes = {props.routes} />\n                </Content>\n            </Layout>\n        </Layout>\n    )\n};\n\nexport default withRouter(Home);","import React from 'react';\nimport { Empty } from 'antd';\nimport './index.scss';\nconst Notes = () => {\n    return (\n        <div className=\"notes\">\n            <Empty description=\"暂无数据\"></Empty>\n        </div>\n    );\n}\nexport default Notes;\n","import axios from 'axios';\nconst baseURL: string = 'https://www.mxnzp.com/api/';\nconst instance = axios.create({\n    baseURL, // 公共地址\n    // withCredentials: true, // send cookies when cross-domain requests\n    timeout: 3000 // 超时\n});\ninstance.interceptors.request.use(\n    config => {\n        config.url = `${config.url}?app_id=ykholzngnvdqlrvn&app_secret=RVBocWEzUFJkYm1yMlFobHVnNnFtdz09`;\n        // 请求头携带token\n        // config.headers['AuthToken'] = 'your.token';\n        // config.headers['app_id'] = 'ykholzngnvdqlrvn';\n        // config.headers['app_secret'] = 'RVBocWEzUFJkYm1yMlFobHVnNnFtdz09';\n        return config;\n    },\n    error => {\n        return Promise.reject(error)\n    }\n);\ninstance.interceptors.response.use(\n    // @ts-ignore\n    response => {\n        const res = response.data;\n        if(res.code === 1) {\n            return res;\n        }\n        throw Promise.reject(res.msg);\n    },\n    error => {\n        return Promise.reject(error)\n    }\n);\nexport default instance;","import React, { useEffect, useReducer} from 'react';\nimport { useHistory, withRouter} from 'react-router-dom';\nimport {getNewsList, getNewsTypes} from \"../../../api/getData\";\nimport { List , Tabs } from 'antd';\nconst { TabPane } = Tabs;\ninterface listItem {\n    title: string,\n    imgList: null | string,\n    source: string,\n    newsId: string,\n    digest?: string,\n    postTime: string\n}\ninterface typeItem {\n    typeId: number,\n    typeName: string\n}\nconst Index = () => {\n    const initialState = {\n        list: [],\n        types: [],\n        typeId: 0,\n    };\n    function myReducer(state, action) {\n        switch(action.type) {\n            case 'changeList':\n                return {\n                    ...state,\n                    list: action.list\n                }\n            case 'changeTypes':\n                return {\n                    ...state,\n                    types: action.types\n                }\n            case 'changeTypeId':\n                return {\n                    ...state,\n                    typeId: action.typeId\n                }\n            default:\n                throw new Error();\n        }\n    }\n    const [state, dispatch] = useReducer(myReducer, initialState);\n    const getNews = (async (typeId:number) => {\n        const result = await getNewsList({typeId: typeId,page: 1});\n        dispatch({type: 'changeList', list: result.data})\n    });\n    useEffect(()=> {\n        (async () => {\n            const types = await getNewsTypes({});\n            dispatch({type: 'changeTypes', types: types.data});\n            dispatch({type: 'changeTypeId', typeId: types.data[0].typeId});\n            await getNews(types.data[0].typeId);\n        })();\n    }, []);\n    const history = useHistory();\n    const handleChange = async (typeId) => {\n        dispatch({type: 'changeTypeId', typeId: typeId});\n        await getNews(typeId);\n    }\n    const goDetail = (newsId: string) => {\n        history.push(`/home/detail/${newsId}`);\n    }\n    return (\n        <div className=\"home\">\n            {\n                state.types.length > 0 && <Tabs\n                    defaultActiveKey={String(state.typeId)}\n                    onChange={handleChange}>\n                    {\n                        state.types.map((type: typeItem) => {\n                            return  <TabPane tab={type.typeName} key={type.typeId}>\n                                {\n                                    state.list && state.list.length > 0 &&  <List\n                                        itemLayout=\"horizontal\"\n                                        dataSource={state.list}\n                                        renderItem={(item: listItem) => (\n                                            <List.Item onClick={() => goDetail(item.newsId)}>\n                                                <div>{item.title}</div>\n                                                <div className=\"post-time\">\n                                                    <span>{item.postTime}</span>\n                                                    <span>{item.source}</span>\n                                                </div>\n                                            </List.Item>\n                                        )}\n                                    />\n                                }\n                            </TabPane>\n                        })\n                    }\n                </Tabs>\n            }\n        </div>\n    );\n};\n\nexport default withRouter(Index);","import React from 'react';\nimport App from '../App';\nimport Home from '../pages/home';\nimport Notes from \"../pages/home/notes\";\nimport List from '../pages/home/news/list';\nimport Detail from '../pages/home/news/detail';\nimport Help from '../pages/help';\nexport interface RouteItem {\n    path: string,\n    component?: React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined,\n    exact?: boolean,\n    redirect?: string,\n    children?: Array<RouteItem>\n}\n// 登录页\nconst routes: Array<RouteItem> = [\n    {\n        path: \"/help\",\n        component: Help,\n        exact: true\n    },\n    {\n        path: \"/home\",\n        component: Home,\n        children: [{\n            path: \"/home/list\",\n            component: List\n        },{\n            path: \"/home/detail/:id\",\n            component: Detail\n        },{\n            path: '/home/notes',\n            component: Notes\n        }]\n    },\n    {\n        path: '/',\n        redirect: '/home/list'\n    }\n]\nexport default routes","import React from 'react';\nimport { Empty } from 'antd';\n\nconst Index = (props) => {\n    console.log(props.routes,'props.routes');\n    return (\n        <div className=\"help\">\n            <Empty description=\"暂无数据\"></Empty>\n        </div>\n    );\n}\nexport default Index;","import http from './request';\n\nexport const getNewsTypes = (params) => http.get('/news/types', {params: { ...params }});\nexport const getNewsList = (params) => http.get('/news/list', {params: { ...params }});\nexport const getNewsDetail = (params) => http.get('/news/details', {params: { ...params }});\nexport const getSentence = (params) => http.get('/daily_word/recommend', {params: { ...params }});\n","import React, { useState, useEffect} from 'react';\nimport { withRouter} from 'react-router-dom';\nimport {getNewsDetail} from \"../../../api/getData\";\nconst Detail = (props:any) => {\n    const [detail, setDetail] = useState<{\n        content: string,\n        cover: string,\n        title: string\n    }>({\n        content: '',\n        cover: '',\n        title: ''\n    });\n    useEffect(()=> {\n        (async () => {\n            const { id } = props.match.params;\n            getListDetail(id);\n        })();\n    }, []);\n    const getListDetail = (newsId: string) => {\n        getNewsDetail({\n            newsId: newsId\n        }).then(res => {\n            if(res.data) {\n                setDetail(res.data);\n            }\n        })\n    }\n    return (\n        <div className=\"detail\">\n            <h2>{detail.title}</h2>\n            <div  dangerouslySetInnerHTML={{__html: detail.content}}>\n\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Detail);","import React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport RouterComp from \"./router/routerComp\";\nimport routes from \"./router/routes\";\nconst App = () => {\n  return (\n    <Router>\n      <RouterComp routes={routes} />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css/normalize.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root: HTMLElement | null = document.getElementById('root')\n\nReactDOM.render(<App/>, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}